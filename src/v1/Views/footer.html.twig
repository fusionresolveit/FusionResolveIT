    </div>
  </div>

  <script type="text/javascript">
    $('.ui.dropdown')
        .dropdown({
        });

    $('.remotedropdown')
      .dropdown({
        // minCharacters: 2,
        saveRemoteData: false,
        preserveHTML : false,
        apiSettings: {
          encodeParameters: false,
          cache: false,
          url: '{url}?q={query}&itemtype={itemtype}',
        }
      });

      $('.remotedropdownrulecondition')
      .dropdown({
        saveRemoteData: false,
        preserveHTML : false,
        apiSettings: {
          encodeParameters: false,
          cache: false,
          url: '{url}?itemtype={itemtype}&definitionname={definitionname}',
        }
      });


    // $('table').tablesort();

    $('.searchfield')
      .dropdown({
        action: 'activate',
        onChange: function(text, value, element)
        {
          type = element[0].attributes['data-type'].value;
          if (type === 'input')
          {
            $('#search-input').prop({
              hidden: false
            });
            $('#search-input input').prop({
              name: 'value'
            });
            $('#search-dropdown').prop({
              hidden: true
            });
            $('#search-dropdown input').removeProp('name');
          } else {
            itemtype = element[0].attributes['data-itemtype'].value;
            $('#search-input').prop({
              hidden: true
            });
            $('#search-input input').removeProp('name');
            $('#search-dropdown').prop({
              hidden: false,
            });
            $('#search-dropdown').data('itemtype', itemtype);
            $('#search-dropdown input').prop({
              name: 'value'
            });
          }
        }
      });

      $('.tabsystem .item')
        .tab();

      {% for m in message %}
        $.toast({
          title: 'Action',
          message: '{{ m.message }}',
          showProgress: 'top',
          classProgress: '{% if m.type == 'error' %}red{% else %}green{% endif %}',
          progressUp: true,
        });
      {% endfor %}

      $('.ui.sticky')
        .sticky();


    function toggleDarkMode ()
    {
      // add fomantic's inverted class to all ui elements
      $('body').find('.ui').addClass('inverted');
      // add custom inverted class to body
      $('body').addClass('inverted');

      // simple toggle icon change
      $("#darkmode > i").removeClass('moon');
      $("#darkmode > i").addClass('sun');

      return;
    }

    function toggleLightMode()
    {
      // remove fomantic's inverted from all ui elements
      $('body').find('.ui').removeClass('inverted');
      // remove custom inverted class to body
      $('body').removeClass('inverted');

      // change button icon
      $("#darkmode > i").removeClass('sun')
      $("#darkmode > i").addClass('moon');

      return;
    }

    darkmodeEnabled = false;
    $('#darkmode').click(function ()
    {
      if (darkmodeEnabled)
      {
        toggleLightMode();
        darkmodeEnabled = false;
      } else {
        toggleDarkMode();
        darkmodeEnabled = true;
      }
    });

    $('#headerChangeEntity').click(function ()
    {
      $('#headerChangeEntity').hide();
      $('#headerEntityForm').show();
    });

    $('.menulink').click(function ()
    {
      $('#menu-' + this.attributes['data-menuid'].value)
        .modal('show');
    });

</script>
</body>
</html>

